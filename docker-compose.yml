version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: solana_mafia_db
      POSTGRES_USER: solana_mafia
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./app/backend/scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U solana_mafia -d solana_mafia_db"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - solana-mafia-network

  # Redis Cache
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - solana-mafia-network

  # Backend API
  backend:
    build:
      context: ./app/backend
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    env_file:
      - ./.env
    environment:
      DATABASE_URL: postgresql://solana_mafia:password@postgres:5432/solana_mafia_db
      REDIS_URL: redis://redis:6379/0
      HOST: 0.0.0.0
      PORT: 8000
      SOLANA_RPC_URL: https://devnet.helius-rpc.com/?api-key=0ecf20d9-719d-4946-be7e-be9b29cf8bca
      SOLANA_WS_URL: wss://devnet.helius-rpc.com/?api-key=0ecf20d9-719d-4946-be7e-be9b29cf8bca
      SOLANA_PROGRAM_ID: 33FDNiVG3H3qNZYbQJbHVXeJG4n5ZfHL8bXuTieifQ3G
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./app/backend:/app
    command: bash -c "python -m alembic upgrade head && uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - solana-mafia-network

  # Frontend Application
  frontend:
    build:
      context: ./app/frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      NODE_ENV: development
      NEXT_PUBLIC_API_URL: http://localhost:8000
      NEXT_PUBLIC_WS_URL: ws://localhost:8001
      NEXT_PUBLIC_SOLANA_RPC_URL: https://devnet.helius-rpc.com/?api-key=0ecf20d9-719d-4946-be7e-be9b29cf8bca
    depends_on:
      backend:
        condition: service_healthy
    volumes:
      - ./app/frontend:/app
      - /app/node_modules
      - /app/.next
    command: npm run dev
    networks:
      - solana-mafia-network

  # Event Indexer Service
  indexer:
    build:
      context: ./app/backend
      dockerfile: Dockerfile
    env_file:
      - ./.env
    environment:
      DATABASE_URL: postgresql://solana_mafia:password@postgres:5432/solana_mafia_db
      REDIS_URL: redis://redis:6379/0
      SOLANA_RPC_URL: https://devnet.helius-rpc.com/?api-key=0ecf20d9-719d-4946-be7e-be9b29cf8bca
      SOLANA_WS_URL: wss://devnet.helius-rpc.com/?api-key=0ecf20d9-719d-4946-be7e-be9b29cf8bca
      SOLANA_PROGRAM_ID: 33FDNiVG3H3qNZYbQJbHVXeJG4n5ZfHL8bXuTieifQ3G
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      backend:
        condition: service_healthy
    volumes:
      - ./app/backend:/app
    command: python -m app.indexer.main
    restart: unless-stopped
    networks:
      - solana-mafia-network

  # Earnings Scheduler Service
  scheduler:
    build:
      context: ./app/backend
      dockerfile: Dockerfile
    env_file:
      - ./.env
    environment:
      DATABASE_URL: postgresql://solana_mafia:password@postgres:5432/solana_mafia_db
      REDIS_URL: redis://redis:6379/0
      SOLANA_RPC_URL: https://devnet.helius-rpc.com/?api-key=0ecf20d9-719d-4946-be7e-be9b29cf8bca
      SOLANA_WS_URL: wss://devnet.helius-rpc.com/?api-key=0ecf20d9-719d-4946-be7e-be9b29cf8bca
      SOLANA_PROGRAM_ID: 33FDNiVG3H3qNZYbQJbHVXeJG4n5ZfHL8bXuTieifQ3G
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      backend:
        condition: service_healthy
    volumes:
      - ./app/backend:/app
    command: python -m app.scheduler.main
    restart: unless-stopped
    networks:
      - solana-mafia-network

  # WebSocket Server
  websocket:
    build:
      context: ./app/backend
      dockerfile: Dockerfile
    ports:
      - "8001:8001"
    env_file:
      - ./.env
    environment:
      DATABASE_URL: postgresql://solana_mafia:password@postgres:5432/solana_mafia_db
      REDIS_URL: redis://redis:6379/0
      WEBSOCKET_HOST: 0.0.0.0
      WEBSOCKET_PORT: 8001
      SOLANA_RPC_URL: https://devnet.helius-rpc.com/?api-key=0ecf20d9-719d-4946-be7e-be9b29cf8bca
      SOLANA_WS_URL: wss://devnet.helius-rpc.com/?api-key=0ecf20d9-719d-4946-be7e-be9b29cf8bca
      SOLANA_PROGRAM_ID: 33FDNiVG3H3qNZYbQJbHVXeJG4n5ZfHL8bXuTieifQ3G
    depends_on:
      redis:
        condition: service_healthy
      backend:
        condition: service_healthy
    volumes:
      - ./app/backend:/app
    command: python -m app.websocket.main
    restart: unless-stopped
    networks:
      - solana-mafia-network

  # Telegram Bot Service
  telegram-bot:
    build:
      context: ./app/backend
      dockerfile: Dockerfile
    env_file:
      - ./.env
    environment:
      DATABASE_URL: postgresql://solana_mafia:password@postgres:5432/solana_mafia_db
      REDIS_URL: redis://redis:6379/0
      SOLANA_RPC_URL: https://devnet.helius-rpc.com/?api-key=0ecf20d9-719d-4946-be7e-be9b29cf8bca
      SOLANA_WS_URL: wss://devnet.helius-rpc.com/?api-key=0ecf20d9-719d-4946-be7e-be9b29cf8bca
      SOLANA_PROGRAM_ID: 33FDNiVG3H3qNZYbQJbHVXeJG4n5ZfHL8bXuTieifQ3G
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      backend:
        condition: service_healthy
    volumes:
      - ./app/backend:/app
    command: python -m app.services.telegram_bot_service
    restart: unless-stopped
    networks:
      - solana-mafia-network

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - backend
      - frontend
    networks:
      - solana-mafia-network

volumes:
  postgres_data:
  redis_data:

networks:
  solana-mafia-network:
    driver: bridge