#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ Business Sync —Å Earnings Scheduler.
–ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ scheduler —Ç–µ–ø–µ—Ä—å —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–µ—Ç business –¥–∞–Ω–Ω—ã–µ –ø–µ—Ä–µ–¥ –æ—Ç–ø—Ä–∞–≤–∫–æ–π earnings.
"""

import asyncio
import sys
import os

# Add project root to path  
sys.path.append('/Users/a1/Projects/solana-mafia/app/backend')

from app.services.earnings.core.processor import ResilientEarningsProcessor
from app.services.player_business_sync import get_player_business_sync_service
from app.core.config import settings

async def test_scheduler_integration():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—é scheduler —Å business sync."""
    
    print("üß™ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï SCHEDULER + BUSINESS SYNC –ò–ù–¢–ï–ì–†–ê–¶–ò–ò")
    print("=" * 60)
    print(f"üîó RPC: {settings.solana_rpc_url}")
    print()
    
    # 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ business sync —Å–µ—Ä–≤–∏—Å –¥–æ—Å—Ç—É–ø–µ–Ω
    print("1Ô∏è‚É£ –ü–†–û–í–ï–†–ö–ê BUSINESS SYNC –°–ï–†–í–ò–°–ê")
    try:
        business_sync_service = await get_player_business_sync_service()
        print("   ‚úÖ Business sync service –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏: {e}")
        return
    
    print()
    
    # 2. –°–æ–∑–¥–∞–µ–º earnings processor
    print("2Ô∏è‚É£ –°–û–ó–î–ê–ù–ò–ï EARNINGS PROCESSOR")
    try:
        earnings_processor = ResilientEarningsProcessor()
        await earnings_processor.initialize()
        print("   ‚úÖ Earnings processor –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")
        print(f"   üìä –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è:")
        print(f"      - Batch size: {earnings_processor.batch_size_accounts}")
        print(f"      - Max concurrent: {earnings_processor.max_concurrent_updates}")
        print(f"      - Timeout: {earnings_processor.timeout_minutes} min")
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏: {e}")
        return
    
    print()
    
    # 3. –°–∏–º—É–ª—è—Ü–∏—è daily earnings process (dry run)
    print("3Ô∏è‚É£ –°–ò–ú–£–õ–Ø–¶–ò–Ø DAILY EARNINGS PROCESS")
    print("   ‚ö†Ô∏è  –í–ù–ò–ú–ê–ù–ò–ï: –≠—Ç–æ dry run - –ù–ï –±—É–¥—É—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏")
    print()
    
    try:
        # –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ (–æ–±—Ö–æ–¥–∏–º database dependency)
        print("   üìä –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö (–æ–±—Ö–æ–¥ database dependency)")
        active_wallets = ["2FRZFt4Ko2jYzGS221sizYC1v2hcizn8AjtgHxiJTzMU"]
        print(f"   üß™ –¢–µ—Å—Ç–æ–≤—ã–π –∫–æ—à–µ–ª–µ–∫: {active_wallets[0]}")
        print(f"   üìä –ê–∫—Ç–∏–≤–Ω—ã—Ö –∏–≥—Ä–æ–∫–æ–≤ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: {len(active_wallets)}")
        
        print()
        
        # –î–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ–º business sync —à–∞–≥
        print("   üîÑ –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è Business Sync —à–∞–≥–∞:")
        
        sync_successful = 0
        sync_failed = 0
        total_businesses_synced = 0
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –Ω–∞ –ø–µ—Ä–≤—ã—Ö 3 –∏–≥—Ä–æ–∫–∞—Ö (–∏–ª–∏ –≤—Å–µ—Ö –µ—Å–ª–∏ –º–µ–Ω—å—à–µ 3)
        test_wallets = active_wallets[:3]
        
        for i, wallet in enumerate(test_wallets, 1):
            print(f"      {i}. –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è {wallet[:20]}...")
            
            try:
                sync_report = await business_sync_service.sync_player_businesses(wallet)
                
                if sync_report.get("success", False):
                    sync_successful += 1
                    businesses_synced = sync_report.get("businesses_synced", 0)
                    total_businesses_synced += businesses_synced
                    
                    print(f"         ‚úÖ –£—Å–ø–µ—à–Ω–æ: {businesses_synced} –±–∏–∑–Ω–µ—Å–æ–≤ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω–æ")
                    
                    if sync_report.get("businesses_added", 0) > 0:
                        print(f"         ‚ûï –î–æ–±–∞–≤–ª–µ–Ω–æ: {sync_report['businesses_added']} –±–∏–∑–Ω–µ—Å–æ–≤")
                    
                    if sync_report.get("businesses_updated", 0) > 0:
                        print(f"         üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–æ: {sync_report['businesses_updated']} –±–∏–∑–Ω–µ—Å–æ–≤")
                    
                    if sync_report.get("portfolio_corrected", False):
                        print(f"         üîß –ü–æ—Ä—Ç—Ñ–æ–ª–∏–æ —Å–∫–æ—Ä—Ä–µ–∫—Ç–∏—Ä–æ–≤–∞–Ω–æ")
                        
                else:
                    sync_failed += 1
                    error = sync_report.get("error", "Unknown error")
                    print(f"         ‚ùå –û—à–∏–±–∫–∞: {error}")
                    
            except Exception as sync_error:
                sync_failed += 1
                print(f"         üí• –ò—Å–∫–ª—é—á–µ–Ω–∏–µ: {sync_error}")
        
        print()
        print(f"   üìä –†–ï–ó–£–õ–¨–¢–ê–¢–´ BUSINESS SYNC:")
        print(f"      ‚úÖ –£—Å–ø–µ—à–Ω–æ: {sync_successful}/{len(test_wallets)}")
        print(f"      ‚ùå –û—à–∏–±–∫–∏: {sync_failed}/{len(test_wallets)}")
        print(f"      üè¢ –í—Å–µ–≥–æ –±–∏–∑–Ω–µ—Å–æ–≤ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω–æ: {total_businesses_synced}")
        print(f"      üìà –ü—Ä–æ—Ü–µ–Ω—Ç —É—Å–ø–µ—Ö–∞: {(sync_successful / len(test_wallets) * 100):.1f}%")
        
        print()
        
        # –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —á—Ç–æ –±—É–¥–µ—Ç –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç—å –¥–∞–ª—å—à–µ
        print("   üì° –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏ (–ù–ï –≤—ã–ø–æ–ª–Ω—è—é—Ç—Å—è –≤ dry run):")
        print("      1. –û—Ç–ø—Ä–∞–≤–∫–∞ update_earnings —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π –≤—Å–µ–º –∏–≥—Ä–æ–∫–∞–º")
        print("      2. –û–±—Ä–∞–±–æ—Ç–∫–∞ signatures —á–µ—Ä–µ–∑ SignatureProcessor")
        print("      3. –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ earnings –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö")
        print("      4. –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∏—Ç–æ–≥–æ–≤–æ–≥–æ –æ—Ç—á–µ—Ç–∞")
        
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞ —Å–∏–º—É–ª—è—Ü–∏–∏: {e}")
        return
    
    print()
    
    # 4. –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–æ–≤—ã–µ –ø–æ–ª—è –≤ ProcessorStats
    print("4Ô∏è‚É£ –ü–†–û–í–ï–†–ö–ê –ù–û–í–´–• –°–¢–ê–¢–ò–°–¢–ò–ß–ï–°–ö–ò–• –ü–û–õ–ï–ô")
    try:
        from app.services.earnings.core.types import ProcessorStats
        
        stats = ProcessorStats()
        print(f"   ‚úÖ ProcessorStats —Å–æ–¥–µ—Ä–∂–∏—Ç –Ω–æ–≤—ã–µ –ø–æ–ª—è:")
        print(f"      - business_sync_successful: {stats.business_sync_successful}")
        print(f"      - business_sync_failed: {stats.business_sync_failed}")
        print(f"      - business_sync_duration: {stats.business_sync_duration}")
        print(f"      - businesses_synced_total: {stats.businesses_synced_total}")
        print(f"      - business_sync_rate: {stats.business_sync_rate:.1%}")
        
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏: {e}")
    
    print()
    print("üéØ –ó–ê–ö–õ–Æ–ß–ï–ù–ò–ï:")
    print("‚úÖ Business sync —É—Å–ø–µ—à–Ω–æ –∏–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞–Ω –≤ earnings scheduler")
    print("‚úÖ –¢–µ–ø–µ—Ä—å scheduler —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–µ—Ç business –¥–∞–Ω–Ω—ã–µ –ü–ï–†–ï–î –æ—Ç–ø—Ä–∞–≤–∫–æ–π earnings")
    print("‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–∞ –ø–æ–¥—Ä–æ–±–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ business sync –æ–ø–µ—Ä–∞—Ü–∏–π") 
    print("‚úÖ –°–∏—Å—Ç–µ–º–∞ –≥–æ—Ç–æ–≤–∞ –æ–±–µ—Å–ø–µ—á–∏–≤–∞—Ç—å –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ earnings –Ω–∞ –æ—Å–Ω–æ–≤–µ blockchain –¥–∞–Ω–Ω—ã—Ö")
    print("üöÄ –°–ª–µ–¥—É—é—â–∏–π —à–∞–≥: –ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –ø–æ–ª–Ω—É—é –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—é –≤ Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–µ")


if __name__ == "__main__":
    print("üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è Scheduler + Business Sync –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏...")
    asyncio.run(test_scheduler_integration())