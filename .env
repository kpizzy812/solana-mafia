# ====================================================================================
# SOLANA MAFIA - UNIFIED ENVIRONMENT CONFIGURATION
# ====================================================================================
# Объединенный .env файл содержащий ВСЕ переменные из корня, backend и frontend
# Создан путем максимального анализа всех конфигураций проекта
# ====================================================================================

# === BASIC ENVIRONMENT SETTINGS ===
ENVIRONMENT=development
DEBUG=true
LOG_LEVEL=INFO
LOG_FORMAT=console
LOG_FILE=

# === DATABASE CONFIGURATION ===
# PostgreSQL настройки - используются backend и docker-compose
DATABASE_URL=postgresql://solana_mafia:password@localhost:5432/solana_mafia_db

# === REDIS CONFIGURATION ===  
# Redis настройки - используются backend, cache и websocket
REDIS_URL=redis://localhost:6379/0
REDIS_HOST=localhost
REDIS_PORT=6379
REDIS_DB=0
REDIS_PASSWORD=

# === SOLANA BLOCKCHAIN CONFIGURATION ===
# Primary RPC settings - Helius devnet с WebSocket поддержкой
SOLANA_RPC_URL=https://devnet.helius-rpc.com/?api-key=0ecf20d9-719d-4946-be7e-be9b29cf8bca
SOLANA_WS_URL=wss://devnet.helius-rpc.com/?api-key=0ecf20d9-719d-4946-be7e-be9b29cf8bca
SOLANA_PROGRAM_ID=33FDNiVG3H3qNZYbQJbHVXeJG4n5ZfHL8bXuTieifQ3G

# === ADVANCED RPC CONFIGURATION ===
# Rate limiting и backup настройки
RPC_RATE_LIMIT=10                                # Requests per second
RPC_BURST_LIMIT=20                               # Max burst before rate limiting  
RPC_TIMEOUT=30                                   # Seconds
RPC_MAX_RETRIES=3                                # Max retries per failed request

# Backup RPC endpoints (comma separated for load balancing)
BACKUP_RPC_URLS=https://solana-api.projectserum.com,https://api.mainnet-beta.solana.com
BACKUP_RPC_RATE_LIMITS=5,3                       # Rate limits for each backup RPC

# RPC Plan Management
RPC_PLAN_TYPE=free                               # free|paid|enterprise
ENABLE_MULTIPLE_ENDPOINTS=false                  # Use backup RPCs for load balancing
ENABLE_ADAPTIVE_RATE_LIMIT=true                  # Dynamically adjust rate limits based on errors

# === SECURITY & AUTHENTICATION ===
SECRET_KEY=hYEz_HCqhXAmrTMrCQleiFYTjx7wSt0R2NueuAZ-IaID7Odq7wpJB4Xd8HaXqCrZK3LDehMF3zzkqCIjmg_xBQ

# === API SERVER CONFIGURATION ===
HOST=127.0.0.1
PORT=8000
CORS_ORIGINS=http://localhost:3000,http://localhost:3001

# === WEBSOCKET CONFIGURATION ===
WEBSOCKET_ENABLED=true
WEBSOCKET_HOST=127.0.0.1
WEBSOCKET_PORT=8001

# === RATE LIMITING ===
RATE_LIMIT_ENABLED=true
RATE_LIMIT_REQUESTS=100
RATE_LIMIT_WINDOW=60

# === ADMIN CONFIGURATION ===
# Admin wallet addresses и private key для earnings updates
ADMIN_WALLETS=HLWTn3BYB3jvgquBG323XLyqzEj11H4N5m6EMpPGCCG6
ADMIN_PRIVATE_KEY=5MBu1f5jjsUJK71fPwEhbVPKCzbJUmtVYdBPMAKrGWPiZpQUquU5D1rHhWpQSrcXYMYRYhAnQ1uoaMVForQEmiE

# === DYNAMIC PRICING SYSTEM ===
DYNAMIC_PRICING_ENABLED=true
PRICE_UPDATE_INTERVAL=300

# === INDEXER CONFIGURATION ===
INDEXER_BATCH_SIZE=1000
INDEXER_POLL_INTERVAL=5
INDEXER_MAX_RETRIES=3

# === EARNINGS SCHEDULER CONFIGURATION ===  
SCHEDULER_ENABLED=true
SCHEDULER_INTERVAL=60                            # Seconds between health checks
EARNINGS_SCHEDULE_UTC_HOUR=0                     # Hour to run daily earnings (0-23)
SCHEDULER_TIMEOUT_MINUTES=30                     # Max time for full earnings cycle

# === DATA SOURCE CONFIGURATION ===
USE_REAL_BLOCKCHAIN_DATA=true                    # true = read real blockchain data, false = use mock data

# === BATCH PROCESSING ===
BATCH_SIZE_ACCOUNTS=500                          # Accounts per get_multiple_accounts call
BATCH_SIZE_UPDATES=1                             # Updates per transaction (1 for single player)
MAX_CONCURRENT_UPDATES=50                        # Max parallel update transactions
SCHEDULER_MAX_WORKERS=5                          # Legacy - kept for compatibility

# === EARNINGS RATE LIMITING ===
EARNINGS_MAX_RPS=6                               # Max RPS reserved for earnings (60% of total)
EARNINGS_RESERVE_PERCENTAGE=60                   # Percentage of total RPS to reserve for earnings
EARNINGS_BATCH_SIZE=5                            # Players per batch transaction (Solana limit ~10-15)
EARNINGS_BATCH_ENABLED=true                      # Enable batch transactions for earnings

# === RETRY LOGIC ===
RETRY_DELAY_BASE=2                               # Base delay for exponential backoff (seconds)
FAILED_PLAYER_RETRY_HOURS=1                      # Hours to wait before retrying failed players

# === TELEGRAM BOT CONFIGURATION (optional) ===
# TELEGRAM_BOT_TOKEN=your_bot_token_here
# TELEGRAM_WEBHOOK_URL=https://your-domain.com/telegram/webhook

# === SOCIAL MEDIA LINKS FOR QUESTS ===
SOCIAL_TWITTER_URL=https://twitter.com/SolanaMafia
SOCIAL_TELEGRAM_URL=https://t.me/SolanaMafia  
SOCIAL_TELEGRAM_CHAT_URL=https://t.me/SolanaMafiaChat
SOCIAL_CEO_CHANNEL_URL=https://t.me/SolanaMafiaCEO

# ====================================================================================
# FRONTEND (NEXT.JS) CONFIGURATION 
# ====================================================================================
# Все переменные должны начинаться с NEXT_PUBLIC_ для доступа в браузере

# === SOLANA FRONTEND CONFIGURATION ===
NEXT_PUBLIC_SOLANA_NETWORK=devnet
NEXT_PUBLIC_SOLANA_RPC_URL=https://devnet.helius-rpc.com/?api-key=0ecf20d9-719d-4946-be7e-be9b29cf8bca
NEXT_PUBLIC_PROGRAM_ID_DEVNET=33FDNiVG3H3qNZYbQJbHVXeJG4n5ZfHL8bXuTieifQ3G
NEXT_PUBLIC_PROGRAM_ID_LOCALNET=33FDNiVG3H3qNZYbQJbHVXeJG4n5ZfHL8bXuTieifQ3G

# === FRONTEND API CONFIGURATION ===
NEXT_PUBLIC_API_URL=http://localhost:8000/api
NEXT_PUBLIC_WS_URL=ws://localhost:8001/ws

# ====================================================================================
# NOTES
# ====================================================================================
# 1. Этот файл объединяет ВСЕ переменные из корня, app/backend/.env и app/frontend/.env.local
# 2. Docker-compose файлы будут обновлены для использования env_file: - ./.env
# 3. Backend config.py будет искать .env в корневой директории  
# 4. Frontend получит переменные через next.js автоматически
# 5. Все скрипты (start.sh, start-dev.sh) будут обновлены для проверки корневого .env
# ====================================================================================