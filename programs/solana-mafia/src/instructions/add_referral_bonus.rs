// instructions/add_referral_bonus.rs
use anchor_lang::prelude::*;
use super::*;

/// –ë–µ–∑–æ–ø–∞—Å–Ω–∞—è –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–≥–æ –±–æ–Ω—É—Å–∞
/// –í—ã–∑—ã–≤–∞–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–æ–º –∏–ª–∏ —É–ø–æ–ª–Ω–æ–º–æ—á–µ–Ω–Ω—ã–º –±—ç–∫–µ–Ω–¥–æ–º
pub fn handler(
    ctx: Context<AddReferralBonus>,
    amount: u64,
) -> Result<()> {
    let player = &mut ctx.accounts.player;
    let game_state = &mut ctx.accounts.game_state;
    
    // –î–æ–±–∞–≤–ª—è–µ–º –±–æ–Ω—É—Å –∫ pending_referral_earnings –∏–≥—Ä–æ–∫–∞ —Å –∑–∞—â–∏—Ç–æ–π –æ—Ç overflow
    player.pending_referral_earnings = player.pending_referral_earnings
        .checked_add(amount)
        .ok_or(crate::error::SolanaMafiaError::MathOverflow)?;
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –≥–ª–æ–±–∞–ª—å–Ω—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —Å –∑–∞—â–∏—Ç–æ–π –æ—Ç overflow
    game_state.total_referral_paid = game_state.total_referral_paid
        .checked_add(amount)
        .ok_or(crate::error::SolanaMafiaError::MathOverflow)?;
    
    msg!("Referral bonus added successfully!");
    msg!("Player: {}", player.owner);
    msg!("Bonus amount: {} lamports", amount);
    msg!("Total pending referral: {} lamports", player.pending_referral_earnings);
    
    Ok(())
}

#[derive(Accounts)]
pub struct AddReferralBonus<'info> {
    /// Authority or backend signer - –¢–û–õ–¨–ö–û –û–ù–ò –ú–û–ì–£–¢ –î–û–ë–ê–í–õ–Ø–¢–¨ –ë–û–ù–£–°–´!
    #[account(
        constraint = authority.key() == game_state.authority @ crate::error::SolanaMafiaError::UnauthorizedAdmin
    )]
    pub authority: Signer<'info>,
    
    /// Player receiving the referral bonus
    #[account(
        mut,
        seeds = [PLAYER_SEED, player.owner.as_ref()],
        bump = player.bump
    )]
    pub player: Account<'info, Player>,
    
    /// Game state for statistics
    #[account(
        mut,
        seeds = [GAME_STATE_SEED],
        bump = game_state.bump
    )]
    pub game_state: Account<'info, GameState>,
}

// üîí –¢–ï–ü–ï–†–¨ –ë–ï–ó–û–ü–ê–°–ù–û!
// –¢–æ–ª—å–∫–æ authority (–∞–¥–º–∏–Ω) –º–æ–∂–µ—Ç –¥–æ–±–∞–≤–ª—è—Ç—å —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–µ –±–æ–Ω—É—Å—ã
// –ó–∞—â–∏—Ç–∞ –æ—Ç –Ω–∞–∫—Ä—É—Ç–∫–∏ –∏ –æ–ø—É—Å—Ç–æ—à–µ–Ω–∏—è treasury