services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: solana_mafia_db
      POSTGRES_USER: solana_mafia
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U solana_mafia"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend API
  backend:
    build: .
    ports:
      - "8000:8000"
    environment:
      DATABASE_URL: postgresql://solana_mafia:password@postgres:5432/solana_mafia_db
      REDIS_URL: redis://redis:6379/0
      SOLANA_RPC_URL: https://api.devnet.solana.com
      ENVIRONMENT: development
      LOG_LEVEL: INFO
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - .:/app
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Event Indexer Service
  indexer:
    build: .
    environment:
      DATABASE_URL: postgresql://solana_mafia:password@postgres:5432/solana_mafia_db
      REDIS_URL: redis://redis:6379/0
      SOLANA_RPC_URL: https://api.devnet.solana.com
      ENVIRONMENT: development
      LOG_LEVEL: INFO
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - .:/app
    command: python -m app.indexer.main
    restart: unless-stopped

  # Earnings Scheduler Service
  scheduler:
    build: .
    environment:
      DATABASE_URL: postgresql://solana_mafia:password@postgres:5432/solana_mafia_db
      REDIS_URL: redis://redis:6379/0
      SOLANA_RPC_URL: https://api.devnet.solana.com
      ENVIRONMENT: development
      LOG_LEVEL: INFO
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - .:/app
    command: python -m app.scheduler.main
    restart: unless-stopped

  # WebSocket Server
  websocket:
    build: .
    ports:
      - "8001:8001"
    environment:
      DATABASE_URL: postgresql://solana_mafia:password@postgres:5432/solana_mafia_db
      REDIS_URL: redis://redis:6379/0
      ENVIRONMENT: development
      LOG_LEVEL: INFO
    depends_on:
      redis:
        condition: service_healthy
    volumes:
      - .:/app
    command: python -m app.websocket.main
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data: